Authentication API Documentation


Register a New User


Endpoint
POST /api/v1/auth/register


Description
Register a new user with the provided information. Returns authentication details if registration is successful.


Authorization
None


Request
HTTP Request:
POST /api/v1/auth/register HTTP/1.1
Host: wised-backend.com
Content-Type: application/json


Request Body:
{
"fullName": "John Doe",
"email": "johndoe@example.com",
"password": "your_password_here"
}


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "User registered successfully",
"error": null,
"data": {
"access_token": "your_access_token",
"refresh_token": "your_refresh_token"
}
}


Response - Error (HTTP 400 Bad Request)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "Registration failed. Email already exists.",
"message": null,
"data": {
"access_token": null,
"refresh_token": null
}
}


Authenticate a User


Endpoint
POST /api/v1/auth/authenticate


Description
Authenticate a user using their email and password. Returns authentication details if authentication is successful.


Authorization
None


Request
HTTP Request:
POST /api/v1/auth/authenticate HTTP/1.1
Host: wised-backend.com
Content-Type: application/json


Request Body:
{
"email": "johndoe@example.com",
"password": "your_password_here"
}


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Authentication successful",
"error": null,
"data": {
"access_token": "your_access_token",
"refresh_token": "your_refresh_token"
}
}


Response - Error (HTTP 401 Unauthorized)
HTTP Response:
HTTP/1.1 401 Unauthorized


Response Body:
{
"success": false,
"error": "Authentication failed. Invalid credentials.",
"message": null,
"data": {
"access_token": null,
"refresh_token": null
}
}


Refresh Authentication Token


Endpoint
POST /api/v1/auth/refresh-token


Description
Refresh an authentication token using a valid refresh token.


Authorization
Bearer


Request
HTTP Request:
POST /api/v1/auth/refresh-token HTTP/1.1
Host: wised-backend.com
Authorization: Bearer access_token


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Token refreshed successfully",
"error": null,
"data": {
"access_token": "your_new_access_token",
"refresh_token": "your_refresh_token"
}
}


Response - Error (HTTP 401 Unauthorized)
HTTP Response:
HTTP/1.1 401 Unauthorized


Response Body:
{
"success": false,
"error": "Token refresh failed. Invalid token or expired token.",
"message": null,
"data": {
"access_token": null,
"refresh_token": null
}
}


Initiate Password Reset


Endpoint
POST /api/v1/auth/password/forgot-password


Description
Initiate a password reset process for the specified email address.


Authorization
None


Request
HTTP Request:
POST /api/v1/auth/password/forgot-password HTTP/1.1
Host: wised-backend.com
Content-Type: application/json


Request Body:
{
"email": "user@example.com"
}


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Please check your email. Email is sent successfully.",
"error": null
}


Response - Error (HTTP 400 Bad Request)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "Invalid Email",
"message": "Email is required and cannot be empty."
}


Reset Password


Endpoint
POST /api/v1/auth/password/reset-password


Description
Reset the password for a user using a valid reset token.


Authorization
None


Request
HTTP Request:
POST /api/v1/auth/password/reset-password HTTP/1.1
Host: wised-backend.com
Content-Type: application/json


Request Body:
{
"newPassword": "newPassword123"
}


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Password reset successfully",
"error": null
}


Response - Error (HTTP 400 Bad Request)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "Invalid or expired reset token",
"message": null
}


Response - Error (HTTP 400 Bad Request, User Not Found)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "User not found",
"message": null
}


Response - Error (HTTP 400 Bad Request, Invalid Token)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "Invalid token",
"message": null
}


User Profile API Documentation


Get User Profile


Endpoint
GET /api/v1/user/profile


Description
Get the user profile.


Authorization
Bearer


Request
HTTP Request:
GET /api/v1/user/profile HTTP/1.1
Host: wised-backend.com
Authorization: Bearer access_token


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Successfully updated user profile",
"error": null,
"data": {
"email": "user@example.com",
"contact_number": "+1234567890",
"bio": "A passionate developer who loves coding and building great applications.",
"dob": "1990-08-15",
"socialMediaLinks": ["https://facebook.com/user123", "https://twitter.com/user123"],
"preferredLanguage": ["English", "Spanish"],
"genre": ["Action", "Drama"],
"city": "New York",
"country": "USA",
"coverImageUrl": "https://example.com/cover.jpg",
"profileImageUrl": "https://example.com/profile.jpg"
}
}


Response - Error (HTTP 400 Bad Request)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "error message",
"message": "Error while fetching user data"
}


Update User Profile


Endpoint
PUT /api/v1/user/profile/update


Description
Update the user profile.


Authorization
Bearer


Request
HTTP Request:
PUT /api/v1/user/profile/update HTTP/1.1
Host: wised-backend.com
Authorization: Bearer access_token
Content-Type: application/json


Request Body:
{
"dob": "1990-08-15",
"gender": "MALE",
"city": "New York",
"country": "USA",
"preferredLanguage": ["English", "Spanish"],
"genre": ["Action", "Drama"],
"socialMediaLinks": ["https://facebook.com/user123", "https://twitter.com/user123"],
"profileImageUrl": "https://example.com/profile.jpg",
"coverImageUrl": "https://example.com/cover.jpg",
"isActive": true,
"bio": "A passionate developer who loves coding and building great applications."
}


Response - Success (HTTP 200 OK)
HTTP Response:
HTTP/1.1 200 OK


Response Body:
{
"success": true,
"message": "Successfully updated user profile",
"error": null,
"data": {
"email": "user@example.com",
"contact_number": "+1234567890",
"bio": "A passionate developer who loves coding and building great applications.",
"dob": "1990-08-15",
"socialMediaLinks": ["https://facebook.com/user123", "https://twitter.com/user123"],
"preferredLanguage": ["English", "Spanish"],
"genre": ["Action", "Drama"],
"city": "New York",
"country": "USA",
"coverImageUrl": "https://example.com/cover.jpg",
"profileImageUrl": "https://example.com/profile.jpg"
}
}


Response - Error (HTTP 400 Bad Request)
HTTP Response:
HTTP/1.1 400 Bad Request


Response Body:
{
"success": false,
"error": "error message",
"message": "Error while fetching user data"
}